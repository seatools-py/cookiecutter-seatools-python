[tool.poetry]
name = "{{cookiecutter.project_name}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.friendly_name}}"
authors = ["{{cookiecutter.author}} <{{cookiecutter.email}}>"]
license = "{{cookiecutter.license}}"
readme = "README.md"
homepage = "https://{{cookiecutter.git_type}}.com/{{cookiecutter.git_user}}/{{cookiecutter.project_name}}"
repository = "https://{{cookiecutter.git_type}}.com/{{cookiecutter.git_user}}/{{cookiecutter.project_name}}"
documentation = "https://{{cookiecutter.project_name}}.readthedocs.io"
{% if cookiecutter.package_name != cookiecutter.project_name.replace('-', '_') -%}
packages = [
    { include = "{{cookiecutter.package_name}}", from = "src" },
]
{% endif -%}
classifiers = [
    "{{cookiecutter.development_status}}",
]

[tool.poetry.urls]
Changelog = "https://{{cookiecutter.git_type}}.com/{{cookiecutter.git_user}}/{{cookiecutter.project_name}}/releases"

[tool.poetry.dependencies]
python = ">=3.9, <3.13"
click = ">=8.0.1"
pydantic = ">=2.6.0"
loguru = "^0.7.2"
pyyaml = "^6.0.1"
seatools = ">=1.0.5"
sqlalchemy = ">=2.0.31"
httpx = ">=0.27.2"
contextvars = ">=2.4"
colorama = ">=0.4.6"
tqdm = ">=4.66.5"
seatools-codegen = ">=1.0.6"
seatools-chrome = ">=1.0.2"

[tool.poetry.dev-dependencies]
Pygments = ">=2.10.0"
bandit = ">=1.7.4"
black = ">=21.10b0"
coverage = {extras = ["toml"], version = ">=6.2"}
darglint = ">=1.8.1"
flake8 = ">=4.0.1"
flake8-bugbear = ">=21.9.2"
flake8-docstrings = ">=1.6.0"
flake8-rst-docstrings = ">=0.2.5"
furo = ">=2021.11.12"
isort = ">=5.10.1"
mypy = ">=0.930"
pep8-naming = ">=0.12.1"
pre-commit = ">=2.16.0"
pre-commit-hooks = ">=4.1.0"
pytest = ">=6.2.5"
pyupgrade = ">=2.29.1"
safety = ">=1.10.3"
sphinx = ">=4.3.2"
sphinx-autobuild = ">=2021.3.14"
sphinx-click = ">=3.0.2"
typeguard = ">=2.13.3"
xdoctest = {extras = ["colors"], version = ">=0.15.10"}
myst-parser = {version = ">=0.16.1"}

[tool.poetry.scripts]
main = "{{cookiecutter.package_name}}.cmd.main:main"

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["{{cookiecutter.package_name}}", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 100

[tool.isort]
profile = "black"
force_single_line = true
lines_after_imports = 2

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_context = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[[tool.poetry.source]]
name = "tsinghua"
url = "https://pypi.tuna.tsinghua.edu.cn/simple"
priority = "primary"
